import os

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, auc, roc_auc_score
import pickle
from loguru import logger

from pefeatures import (
    PEFeatureExtractor
)
from sample_generation import move_files


# Default configure
model = RandomForestClassifier()
extractor = PEFeatureExtractor()

# Load trained model
with open("./model/RandomForestClassifier.pkl", "rb") as file:
    model = pickle.load(file)

# Init varibales
mal_features = []
true_list = []

# Load unpredicted files
no_mal = 500
no_benign = 500
move_files(no_mal, no_benign)
folder_path = "/home/unibna/thesis/detector/random_forest/sample/malware"
file_list = os.listdir(folder_path)
for file_name in file_list:
    fp = os.path.join(folder_path, file_name)
    with open(fp, "rb") as file:
        mal_features.append(extractor.extract(file.read()))
        true_list.append(1.)

folder_path = "/home/unibna/thesis/detector/random_forest/sample/benign"
file_list = os.listdir(folder_path)
for file_name in file_list:
    fp = os.path.join(folder_path, file_name)
    with open(fp, "rb") as file:
        mal_features.append(extractor.extract(file.read()))
        true_list.append(0.)


pred = model.predict(mal_features)

score = accuracy_score(true_list, pred)
logger.success("Accuracy score: ", score)

score = auc(true_list, pred)
logger.success("Accuracy score: ", score)

score = roc_auc_score(true_list, pred)
logger.success("Accuracy score: ", score)
